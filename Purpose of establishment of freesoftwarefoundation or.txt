1 자유소프트웨어재단 설립목표 + rules


--------------------자유소프트웨어-----------------
"자유 소프트웨어"의 핵심은 구속되지 않는다는 관점에서의 자유에 있는 것이지 무료라는 금전적인 측면에 있는 것이 아닙니다. 우리가 의도하는 이러한 자유의 의미를 쉽게 이해하기 위해서는 "무료 맥주(free beer)"가 아닌 "언론의 자유(free speech)"와 같은 예를 생각해 볼 수 있습니다.
"자유 소프트웨어"는 사용자가 소프트웨어를 실행시키거나 이를 복제 및 배포할 수 있는 자유와 함께 소스 코드에 대한 접근을 통해서 이를 학습하고 수정, 개선시킬 수 있는 원천적인 자유까지를 모두 포괄하는 것입니다. 따라서, 간략히 말하면 다음과 같은 4가지 종류의 자유를 내포한다고 할 수 있습니다.
프로그램을 어떠한 목적을 위해서도 실행할 수 있는 자유.
프로그램의 작동 원리를 연구하고 이를 자신의 필요에 맞게 변경시킬 수 있는 자유 (자유 1). 이러한 자유를 위해서는 소스 코드에 대한 접근이 선행되어야 합니다.
이웃을 돕기 위해서 프로그램을 복제하고 배포할 수 있는 자유 (자유 2).
프로그램을 향상시키고 이를 공동체 전체의 이익을 위해서 다시 환원시킬 수 있는 자유 (자유 3). 이러한 자유를 위해서는 소스 코드에 대한 접근이 선행되어야 합니다.
사용자에게 위와 같은 자유를 모두 보장하는 프로그램은 자유 소프트웨어라고 할 수 있습니다.

출처 :　http://meetup.toast.com/posts/101

--------------------자유 소프트웨어 재단--------------------------
자유 소프트웨어 재단(영어: Free Software Foundation 줄여서 FSF)은 미국의 자유 소프트웨어 관련 재단이다. 자유 소프트웨어의 생산과 보급을 장려하기 위해 리처드 스톨만이 세운 재단으로, 주로 컴퓨터 소프트웨어를 만들어 배포하고 수정하는 보편적인 자유를 제고한다. 설립 이후부터 1990년대 중반까지 자유 소프트웨어 재단 기금은 GNU 프로젝트(GNU 프로젝트(GNU project)는 1983년 9월 27일 유즈넷 net.unix-wizard 그룹을 통해 일반에 알려졌다. 스톨만은 첫 선언문에 이은 "GNU 선언문"을 비롯한 여러 글들을 통해서, "초기 전산 공동체에 지배적이었던, 협동 정신을 되돌리자"라고 주장했다. GNU 프로젝트는 누구나 자유롭게 "실행, 복사, 수정, 배포"할 수 있고, 누구도 그런 권리를 제한하면 안 된다는 사용 허가권(License) 아래 소프트웨어를 배포한다. 카피레프트로 불리는 이런 생각은 GPL(GNU 일반 공중 사용 허가서)에 나타나 있다.
1985년에 스톨만은 GNU 프로젝트를 철학적, 법률적, 금융적으로 지원하기 위해 자선단체인 자유 소프트웨어 재단(FSF, Free Software Foundation)을 세웠다. 이 재단은 GNU를 개발할 프로그래머들도 고용했다. 그러나, 프로젝트의 대부분은 자원 봉사자들이 개발했으며, 앞으로도 그럴 것이다. GNU가 눈길을 끎에 따라, 이를 주목한 회사들은 GNU 소프트웨어의 개발이나 판매 및 기술 지원을 돕기 시작했다. 이 가운데 가장 두드러지고 성공적인 것은 (현재는 레드햇의 일부인) Cygnus Solutions이다)의 자유 소프트웨어를 작성하기 위해 소프트웨어 개발자를 고용하는데 대부분 사용되었다. 1990년대 중반 이후로 이 재단의 직원들과 자발적인 기여자들은 대개 자유 소프트웨어 운동과 자유 소프트웨어 커뮤니티를 위한 법적, 구조적 문제에 대한 작업을 처리하고 있다. 2002년 11월 25일, 자유 소프트웨어 재단은 자유 소프트웨어 재단 연합 멤버십 프로그램을 시작했다. 목표를 지속하기 위해 오직 자유 소프트웨어만이 FSF의 컴퓨터에 사용된다.

출처 : https://ko.wikipedia.org/wiki/%EC%9E%90%EC%9C%A0_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4_%EC%9E%AC%EB%8B%A8

---------------------gnu  프로젝트--------------------------
GNU는 유닉스와 호환되는 운영체제다. 리처드 스톨만은 소프트웨어 공유 운동을 시작하기 위해 가장 먼저 필요한 게 운영체제라고 생각했다. 운영체제는 컴퓨터를 사용하는 데 필요한 핵심 소프트웨어이고, 운영체제가 있다면 컴퓨터를 이용해서 다양한 종류의 작업을 할 수 있었기 때문이다. 따라서 자유롭게 사용할 수 있는 운영체제가 있다면 상호 협력하는 개발자들이 공동체를 다시 한번 만들 수 있을 거라고 스톨만은 판단했다.

리처드 스톨만이 ‘유닉스’ 계열 운영체제를 만들기로 한 이유는 기존 유닉스 사용자들이 새로운 시스템에 쉽게 적응할 수 있으리라고 생각했기 때문이었다. GNU라는 이름은 ‘GNU는 유닉스가 아니다’(Gnu is Not Unix)라는 문장의 첫 글자를 따서 만든 약어다. GNU는 유닉스와 호환되도록 만들어진 운영체제이기는 하지만, 유닉스와는 다른 운영체제라는 의미를 내포하기 위해 만든 이름이다. GNU 프로젝트에선 시스템 리소스를 관리하는 커널 ‘허드’를 만들기도 했는데, 1991년 리눅스가 관심을 받으면서 GNU 도구에 리눅스 커널이 통합됐다.

리처드 스톨만은 1985년 GNU 프로젝트를 지원하기 위한 자유소프트웨어재단을 설립한다. 그러면서 운영체제를 만드는 것 외에 라이선스도 함께 만들어 공유 운동을 펼쳤다.즉 자유를 실질적으로 보장하기 위해 리차드 스톨만은 자신의 소프트웨어에 대한 저작권을 확보한 뒤, 이러한 권리를 전제로 해당 저작물을 일정한 조건에 의해 사용하도록 허락하는 ‘GNU GPL(GENERAL PUBLIC LICENSE, 일반 공중 사용 허가서)’를 만들었다. 이를 줄여서 ‘GPL’이라고 표현하기도 한다.

출처 : http://meetup.toast.com/posts/101

-----------------gpl 라이선스-------------------
3.2 GPL 2.0 License History
대부분의 상용 소프트웨어 라이선스는 소프트웨어를 공유하거나 수정할 수 있는 자유를 금지하기 위해 고안되었다. 반면에 GPL은 자유 소프트웨어를 공유하고 수정할 수 있는 자유를 보장하기 위해 의도 되었다. 즉, 소프트웨어가 사용자 모두에게 자유롭게 이용될 수 있도록 하는 것이다. GPL은 자유소프트웨어재단(FSF)의 소프트웨어 대부분을 비롯하여 저작자가 이 라이선스의 사용을 지정한 기타 모든 프로그램에 적용된다. 누구나 자신의 프로그램에 이 라이선스를 적용시킬 수 있다.

자유 소프트웨어란 말에서 사용되는 '자유 Free' 라는 단어는 무료라는 금전적인 의미가 아니라 자유(Freedom)를 의미한다 FSF의 라이선스들은 이용자가 자유 소프트웨어의 복제본을 배포할 수 있는(그리고 원한다면 판매할 수 있는) 자유를 보장하기 위해 고안되었다. 또한 소스코드를 받거나, 원하면 얻을 수 있고, 소프트웨어를 수정하거나 그것의 일부를 새로운 자유 프로그램 내에서 사용 할 수 있으며, 이상과 같은 일들을 할 수 있다는 사실을 알 수 있도록 보장하기 위해 고안되었다.

이용자의 권리를 보호하기 위해서는 다른 사람이 이용자의 권리를 부정하거나 포기하도록 요구하는 행위를 금지하기 위한 규정을 만들어야 한다. 이러한 규정들은 이용자가 소프트웨어 복제본을 배포하거나 수정할 경우에 당신에게도 특정한 의무를 부과한다. 즉 프로그램을 무상이나 유상으로 배포할 경우 모든 권리를 수취인에게 전달해야 한다.

3.3 GPL 3.0 License History
1991년 배포된 GPl 2.0은 2007년까지 16년 동안 수정 없이 사용되었다. 소프트웨어 관련 기술과 이를 둘러싼 시장, 제도의 변화속도에 비추어 보면 상당히 오랜 기간 동안 개정되지 않고 사용된 것으로 평가할 수 있다. 하지만 1990년대 초반 오픈소스 소프트웨어가 널리 사용되기 이전에 만들어진 GPL2.0은 최근의 변화된 상황에서 조금씩 그 한계를 드러내고 있었다. 예컨대 자유/오픈소스 소프트웨어 운동이 미국에서 시작되었으며 GPL 2.0도 미국의 법제도를 기반으로 만들어졌는데, 현재 자유/오픈소스 소프트웨어 및 GPL은 전 세계적으로 사용되고 있으며, 그에 따라 각국 법제도의 차이를 반영할 필요성이 제기되었었다. 이밖에 소프트웨어 특허의 확대와 그에 따른 위험의 증가, 자유/오픈소스 소프트웨어 라이선스들의 증가와 양립성 문제, DRM 기술의 확대적용과 법에 의한 보호, 네트워크서버기반 소프트웨어의 증가, P2P 등 새로운 기술의 등장 등 일련의 환경변화로 GPL개정의 필요성은 더욱 증대되었다.

하지만 자유/오픈소스소프트웨어와 GPl의 사용자 층이 넓어진 만큼 개정작업은 더욱 복잡해졌다. 1991년 GPL 2.0이 발표될 당시 리차드 스톨만이 몇몇 법률가와 개발자들로부터 의견을 수렴하긴 했었지만, GPL의 개정에 있어 공식적인 의견수렴 절차나 논의가 필요한 것은 아니었다. GPL 2.0이 발표되고 FSF는 곧바로 GNU 프로젝트의 결과물들을 GPL 2.0으로 교체하였으며, 리누스 토발즈도 리눅스 커널에 GPL 2.0을 채택하였었다. 하지만 이번의 상황은 그렇지 못했다. GPL은 전세계 수만개의 프로젝트에서 사용되고 있었으며, PC, 서버 운영체제로부터 휴대폰, PD, 셋탑박스, 홈네트워킹 장비 등의 임베디드 소프트웨어 분야에서 광범위하게 사용되고 있었다. 다시 말하면 더 이상 FSF의 GNU프로젝트에서만 사용되는 라이선스가 아니며, 그야말로 자유/오픈소스소프트웨어에 관계된 수많은 기업과 사람들이 지켜야 할 행동규범의 지위를 갖게 된 것이다.

FSF는 수년간 자유/오픈소스 소프트웨어 커뮤니티, 산업계, 학계 등과 공식적으로 또는 비공식적으로 GPL의 개정에 대해 논의해 왔으며, 이를 바탕으로 마련한 첫 번째 안(First Discussion Draft)을 2006년 1월 발표하였다. 초안의 발표와 함께 다양한 의견을 수렴하기 위한 토론위원회 등의 공식적인 프로세스를 만들었다. 이를 바탕으로 인터넷을 통한 의견 수렴, 수차례의 국제 컨퍼런스를 거쳐 2006년 7월에 두 번째 안을, 2007년 3월과 5월에 세 번째 안과 네 번째 안을 발표하였으며, 2007년 6월 29일 마침내 공식적으로 GPL 3.0을 발표하였다. GPL의 개정과정에서 가장 논란이 되었던 내용은 DRM(또는 Tivoization) 관련 쟁점, 특허권의 취급, 오픈소스 라이선스간의 양립성, 네트워크 서버 형태로 GPL 소프트웨어를 이용하는 경우의 처리 등이다. 이 밖에 소스코드의 범위를 명확히 하고, 새로운 용어를 정의하는 등의 수정이 있었다.

3.4 Affero GPL 3.0 History
Affero GPL(AGPL)은 네트워크 서버 소프트웨어의 사례에서 커뮤니티와의 협력을 보장하기 위해 만들어진 라이선스이다. Affero GPL은 GPL 라이선스를 기반으로 만들어진 라이선스로서, Affero GPL 1.0은 GPL 2.0을 기반으로 Affero GPL 3.0은 2007년 GPL 3.0을 기반으로 제정되었다.

모든 사용자의 자유를 보호하는 것의 부차적 이익은, 프로그램의 대체 버전에서 만들어진 개선 사항들을 널리 통용되는 경우, 다른 개발자들이 그것을 통합하여 사용하는 것이 가능해진다는 것이다. 많은 자유 소프트웨어 개발자들은 이러한 결과로 이루어진 협력에 의해 고무되고 용기를 얻는다. 그러나, 네트워크 서버에서 사용되는 소프트웨어의 경우에는 이러한 결과가 나오지 않을 수도 있다. GPL은 수정 버전을 만들고, 소스코드를 공중에게 릴리즈 하지 않은 상태로 공중이 수정 버전을 서버상에서 접근하도록 하는 것을 허용한다. Affero GPL은 그러한 경우에 수정된 소스코드가 커뮤니티에 제공되도록 보장하기 위해 특별히 고안되었다. 그것은 네트워크 서버의 운영자가 그곳에서 실행되고 있는 수정 버전의 소스코드를 해당 서버의 사용자들에게 제공하도록 요구한다. 따라서, 공개적으로 접근 가능한 서버상에서 수정 버전을 공개적으로 사용하는 것은 수정 버전의 소스코드에 대한 공개적 접근을 허용하는 것이다.

3.5 LGPL License History
Lesser GPL(LGPL) 라이선스는 라이브러리는 공유하되 개발된 제품에 대해서는 소스를 공개하지 않고 상용 SW 판매가 가능하도록 허용한 것으로, GPL보다 완화된 라이선스이다. LGPL 2.1은 GNU Lesser General Public License의 이름으로 공표된 최초의 버전인데, GNU Library General Public License 버전 2의 후속판으로 간주되기 때문에 버전 번호를 2.1로 붙인 것이다. LGPL 3.0은 GPL 3.0 기반으로 만들어 졌다.

LGPL 라이선스는 자유소프트웨어 재단이나 기타 저작자의 소프트웨어 중에서 주로 라이브러리와 같이 특수하게 고안된 일부 소프트웨어 패키지에 적용된다. 예를 들어 만약 라이브러리의 복제본을 무상이나 유상으로 배포할 경우에, 당신은 우리가 당신에게 부여한 모든 권리를 수취인에게도 그대로 부여해야한다. 또한 수취인이 소스코드를 받을 수 있도록, 혹은 필요에 따라서 스스로 구할 수 있도록 보장해주어야 한다. 만약 라이브러리에 다른 코드를 링크시켰다면, 수취인이 라이브러리를 수정하여 컴파일하는 경우에도 다시 링크를 걸 수 있도록 그 코드에 해당하는 완전한 오브젝트 파일 전체를 함께 제공해야 한다. 그리고 수취인이 이와 같은 권리를 분명히 알 수 있도록 관련 조항들을 보여주어야 한다.



-------------------오픈소스 단체 등장---------------
3.6 Free Software vs OpenSource
자유 소프트웨어가 등장하고 시간이 지나며 몇 가지 단점이 지적되기 시작됐다. 자유 소프트웨어는 제약이 많은 GPL 조항 때문에 상용 기술 개발에서 활용할 수 없다는 지적이 대표적이다. 에릭 레이먼드, 브루스 페런스 등은 ‘오픈소스’(Open Source)라는 새로운 용어를 제안하고, 기업들이 소스코드 공개에 보다 많이 참여할 수 있도록 지원했다. 동시에 1998년 에릭 레이먼드와 브루스 페런스는 ‘오픈소스 이니셔티브’(Open Source Initiative, OSI)를 설립하고 오픈소스에 해당하는 라이선스의 최소한의 기준을 정의(Open Source Definition, OSD)해 놓았다. OSI는 이 정의에 따라 인증, 관리 및 촉진하는 일을 진행하고 있다. 현재 업계에선 자유 소프트웨어와 오픈소스를 혼용해서 쓰는 경우가 많지만, 일반적으로 오픈소스 소프트웨어는 자유 소프트웨어를 포함한 넓은 의미로 사용된다.

자유소프트웨어재단은 오픈소스 소프트웨어라는 용어에는 ‘자유롭게 사용할 수 있는 권리’가 포함되어있지 않다고 보고 자유 소프트웨어라는 용어를 사용하기를 권장한다. 그렇다고 두 문화가 서로 적대적인 관계는 아니다. GNU 프로젝트 공식 홈페이지에서는 “자유 소프트웨어 운동과 오픈소스 운동은 공동체에 있어서 두 개의 정당과도 같다”라며 “자유 소프트웨어 운동과 오픈소스 운동은 기본 원칙에 대해서 의견을 달리하지만, 모든 현실적인 방안에 대해서는 같은 생각을 하고 있으며 세부적인 프로젝트에서 같이 협력하고 있다”라고 설명하고 있다. 특히 “자유 소프트웨어 운동에 있어서 우리는 오픈소스 운동을 적이라고 생각하지 않는다”라며 “우리의 적은 독점 소프트웨어”라고 강조한다

출처 :　http://meetup.toast.com/posts/101




























